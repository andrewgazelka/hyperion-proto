syntax = "proto3";
import "shared.proto";

package server_to_proxy;

message UpdatePlayerChunkPositions {
  repeated uint64 stream = 1;
  repeated shared.ChunkPosition positions = 2;
}

// Mark the players as able to receive broadcasts.
// This is used because Broadcasts should not be sent to the player before they are in the play state.
message SetReceiveBroadcasts {
  uint64 stream = 2;
}

message BroadcastGlobal {
  bytes data = 1;
  bool optional = 2;
  repeated uint64 exclude = 3;
}

// Resulting priority is calculated by the taxicab distance multiplied by the priority
message BroadcastLocal {
  bytes data = 1;
  uint32 taxicab_radius = 2;
  shared.ChunkPosition center = 3;
  bool optional = 4;
  repeated uint64 exclude = 5;
}

message Multicast {
  bytes data = 1;
  repeated uint64 stream = 2;
}

message Unicast {
  bytes data = 3;
  uint64 stream = 2;
}

message ServerToProxy {
  oneof server_to_proxy_message {
    UpdatePlayerChunkPositions update_player_chunk_positions = 1;
    BroadcastGlobal broadcast_global = 2;
    BroadcastLocal broadcast_local = 3;
    Multicast multicast = 4;
    Unicast unicast = 5;
  }
}